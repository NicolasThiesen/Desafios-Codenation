{"ast":null,"code":"import { createStore } from \"redux\";\nconst INITIAL_STATE = {\n  app: {\n    environment: \"production\",\n    name: \"react-spotify\",\n    version: \"0.1.0\"\n  },\n  auth: {\n    accessToken: \"\",\n    errorMessage: \"\",\n    expirationTime: \"\",\n    expiresIn: \"\",\n    isLogged: null,\n    tokenType: \"\"\n  },\n  content: {\n    categories: [],\n    playlists: [],\n    tracks: [],\n    playingNowId: null,\n    playingNowTrack: null,\n    playerHeigh: 0,\n    status: \"idle\",\n    errorMessage: \"\"\n  },\n  user: {\n    email: \"\",\n    errorMessage: \"\",\n    name: \"\",\n    status: null,\n    thumb: \"\"\n  },\n  page: {\n    currentPage: \"\"\n  }\n};\n\nfunction reducer(state = INITIAL_STATE, action) {\n  const {\n    payload\n  } = action;\n\n  switch (action.type) {\n    case \"SET_USER\":\n      return { ...state,\n        action: payload\n      };\n\n    case \"SET_AUTH\":\n      console.log(payload.accessToken);\n      return { ...state,\n        auth: { ...state.auth,\n          accessToken: payload.access_token,\n          expiresIn: payload.expires_in,\n          tokenType: payload.token_type,\n          isLogged: payload.isLogged\n        }\n      };\n\n    case \"CHANGE_STATUS\":\n      return { ...state,\n        content: { ...state.content,\n          status: payload\n        }\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst store = createStore(reducer);\nexport default store;","map":{"version":3,"sources":["C:/Users/aluno/Codenation/react-17/src/store/index.js"],"names":["createStore","INITIAL_STATE","app","environment","name","version","auth","accessToken","errorMessage","expirationTime","expiresIn","isLogged","tokenType","content","categories","playlists","tracks","playingNowId","playingNowTrack","playerHeigh","status","user","email","thumb","page","currentPage","reducer","state","action","payload","type","console","log","access_token","expires_in","token_type","store"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,OAA1B;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAG;AACFC,IAAAA,WAAW,EAAE,YADX;AAEFC,IAAAA,IAAI,EAAE,eAFJ;AAGFC,IAAAA,OAAO,EAAE;AAHP,GADY;AAMlBC,EAAAA,IAAI,EAAE;AACHC,IAAAA,WAAW,EAAE,EADV;AAEHC,IAAAA,YAAY,EAAE,EAFX;AAGHC,IAAAA,cAAc,EAAE,EAHb;AAIHC,IAAAA,SAAS,EAAE,EAJR;AAKHC,IAAAA,QAAQ,EAAE,IALP;AAMHC,IAAAA,SAAS,EAAE;AANR,GANY;AAclBC,EAAAA,OAAO,EAAE;AACLC,IAAAA,UAAU,EAAE,EADP;AAELC,IAAAA,SAAS,EAAE,EAFN;AAGLC,IAAAA,MAAM,EAAE,EAHH;AAILC,IAAAA,YAAY,EAAE,IAJT;AAKLC,IAAAA,eAAe,EAAE,IALZ;AAMLC,IAAAA,WAAW,EAAE,CANR;AAOLC,IAAAA,MAAM,EAAE,MAPH;AAQLZ,IAAAA,YAAY,EAAC;AARR,GAdS;AAwBlBa,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,EADL;AAEFd,IAAAA,YAAY,EAAC,EAFX;AAGFJ,IAAAA,IAAI,EAAE,EAHJ;AAIFgB,IAAAA,MAAM,EAAE,IAJN;AAKFG,IAAAA,KAAK,EAAE;AALL,GAxBY;AA+BlBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,WAAW,EAAE;AADX;AA/BY,CAAtB;;AAqCA,SAASC,OAAT,CAAiBC,KAAK,GAAE1B,aAAxB,EAAuC2B,MAAvC,EAA8C;AAC1C,QAAM;AAACC,IAAAA;AAAD,MAAYD,MAAlB;;AACA,UAAQA,MAAM,CAACE,IAAf;AACI,SAAK,UAAL;AACI,aAAQ,EAAC,GAAGH,KAAJ;AAAWC,QAAAA,MAAM,EAAEC;AAAnB,OAAR;;AACJ,SAAK,UAAL;AACIE,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACtB,WAApB;AACA,aAAQ,EAAC,GAAGoB,KAAJ;AAAWrB,QAAAA,IAAI,EAAE,EAAC,GAAGqB,KAAK,CAACrB,IAAV;AAAgBC,UAAAA,WAAW,EAAEsB,OAAO,CAACI,YAArC;AAAmDvB,UAAAA,SAAS,EAAEmB,OAAO,CAACK,UAAtE;AAAkFtB,UAAAA,SAAS,EAAEiB,OAAO,CAACM,UAArG;AAAiHxB,UAAAA,QAAQ,EAACkB,OAAO,CAAClB;AAAlI;AAAjB,OAAR;;AACJ,SAAK,eAAL;AACI,aAAO,EAAC,GAAGgB,KAAJ;AAAWd,QAAAA,OAAO,EAAE,EAAC,GAAGc,KAAK,CAACd,OAAV;AAAoBO,UAAAA,MAAM,EAAES;AAA5B;AAApB,OAAP;;AACJ;AACI,aAAOF,KAAP;AATR;AAYH;;AAED,MAAMS,KAAK,GAAGpC,WAAW,CAAC0B,OAAD,CAAzB;AACA,eAAeU,KAAf","sourcesContent":["import {createStore} from \"redux\";\r\n\r\nconst INITIAL_STATE = {\r\n    app : {\r\n        environment: \"production\",\r\n        name: \"react-spotify\",\r\n        version: \"0.1.0\"\r\n    },\r\n    auth: {\r\n       accessToken: \"\", \r\n       errorMessage: \"\",\r\n       expirationTime: \"\",\r\n       expiresIn: \"\",\r\n       isLogged: null,\r\n       tokenType: \"\"\r\n    },\r\n    content: {\r\n        categories: [],\r\n        playlists: [],\r\n        tracks: [],\r\n        playingNowId: null,\r\n        playingNowTrack: null,\r\n        playerHeigh: 0,\r\n        status: \"idle\",\r\n        errorMessage:\"\"\r\n    },\r\n    user: {\r\n        email: \"\",\r\n        errorMessage:\"\",\r\n        name: \"\",\r\n        status: null,\r\n        thumb: \"\",\r\n    },\r\n    page: {\r\n        currentPage: \"\"\r\n    }\r\n};\r\n\r\n\r\nfunction reducer(state= INITIAL_STATE, action){\r\n    const {payload} = action;\r\n    switch (action.type) {\r\n        case \"SET_USER\":\r\n            return  {...state, action: payload }\r\n        case \"SET_AUTH\":\r\n            console.log(payload.accessToken);\r\n            return  {...state, auth: {...state.auth, accessToken: payload.access_token, expiresIn: payload.expires_in, tokenType: payload.token_type, isLogged:payload.isLogged} }  \r\n        case \"CHANGE_STATUS\":\r\n            return {...state, content: {...state.content , status: payload} }\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nconst store = createStore(reducer);\r\nexport default store;"]},"metadata":{},"sourceType":"module"}