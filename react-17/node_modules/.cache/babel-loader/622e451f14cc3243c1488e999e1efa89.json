{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aluno\\\\Codenation\\\\react-17\\\\src\\\\containers\\\\Playlists\\\\Playlists.jsx\";\nimport React from 'react';\nimport './Playlists.scss';\nimport { RouteHeader, Loading } from '../../components';\nimport PlaylistItem from './PlaylistItem';\n\nconst Playlists = ({\n  data,\n  categoryName,\n  categoryId,\n  isLoading,\n  path\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"playlists\",\n  \"data-testid\": \"playlists\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"container\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }\n}, console.log(data.length), /*#__PURE__*/React.createElement(RouteHeader, {\n  path: path,\n  categoryName: categoryName.name,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 13\n  }\n}), isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n  className: \"playlists__content\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 19\n  }\n}, data.length && data.map(playlist => /*#__PURE__*/React.createElement(PlaylistItem, {\n  categoryId: categoryId,\n  description: playlist.description,\n  id: playlist.id,\n  key: playlist.id,\n  name: playlist.name,\n  path: path,\n  image: playlist.images[0],\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 25\n  }\n}))) : /*#__PURE__*/React.createElement(Loading, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 19\n  }\n})));\n\nexport default Playlists;","map":{"version":3,"sources":["C:/Users/aluno/Codenation/react-17/src/containers/Playlists/Playlists.jsx"],"names":["React","RouteHeader","Loading","PlaylistItem","Playlists","data","categoryName","categoryId","isLoading","path","console","log","length","name","map","playlist","description","id","images"],"mappings":";AAAA,OAAOA,KAAP,MAAmB,OAAnB;AAEA,OAAO,kBAAP;AAEA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,kBAArC;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA,UAAtB;AAAkCC,EAAAA,SAAlC;AAA6CC,EAAAA;AAA7C,CAAD,kBACd;AAAK,EAAA,SAAS,EAAC,WAAf;AAA2B,iBAAY,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAK,EAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKC,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACO,MAAjB,CADL,eAEI,oBAAC,WAAD;AAAa,EAAA,IAAI,EAAEH,IAAnB;AAAyB,EAAA,YAAY,EAAEH,YAAY,CAACO,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,EAGKL,SAAS,gBACJ;AAAK,EAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGH,IAAI,CAACO,MAAL,IAAeP,IAAI,CAACS,GAAL,CAASC,QAAQ,iBAC7B,oBAAC,YAAD;AACI,EAAA,UAAU,EAAER,UADhB;AAEI,EAAA,WAAW,EAAEQ,QAAQ,CAACC,WAF1B;AAGI,EAAA,EAAE,EAAED,QAAQ,CAACE,EAHjB;AAII,EAAA,GAAG,EAAEF,QAAQ,CAACE,EAJlB;AAKI,EAAA,IAAI,EAAEF,QAAQ,CAACF,IALnB;AAMI,EAAA,IAAI,EAAEJ,IANV;AAOI,EAAA,KAAK,EAAEM,QAAQ,CAACG,MAAT,CAAgB,CAAhB,CAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADY,CADlB,CADI,gBAcJ,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAjBV,CADJ,CADJ;;AAwBA,eAAed,SAAf","sourcesContent":["import React  from 'react';\n\nimport './Playlists.scss';\n\nimport { RouteHeader, Loading } from '../../components';\n\nimport PlaylistItem from './PlaylistItem';\n\n\nconst Playlists = ({ data, categoryName, categoryId, isLoading, path }) => (\n    <div className=\"playlists\" data-testid=\"playlists\">\n        <div className=\"container\">\n            {console.log(data.length)}\n            <RouteHeader path={path} categoryName={categoryName.name}></RouteHeader>\n            {isLoading \n                ? <div className=\"playlists__content\">\n                    {data.length && data.map(playlist => \n                        <PlaylistItem \n                            categoryId={categoryId} \n                            description={playlist.description} \n                            id={playlist.id}\n                            key={playlist.id}\n                            name={playlist.name}\n                            path={path}\n                            image={playlist.images[0]}\n                            \n                        ></PlaylistItem>)}\n                </div>\n                : <Loading></Loading>\n            }\n        </div>\n    </div>);\n\nexport default Playlists;\n\n"]},"metadata":{},"sourceType":"module"}