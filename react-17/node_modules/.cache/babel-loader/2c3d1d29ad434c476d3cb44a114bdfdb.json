{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aluno\\\\Codenation\\\\react-17\\\\src\\\\Pages\\\\Autorize\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Authorize } from \"../../containers\";\nimport { Loading } from '../../components';\nimport { Redirect } from 'react-router-dom';\nimport { getToken } from \"../../tools/splitUrl\";\n\nconst AutorizePage = () => {\n  const [autorized, setAutorized] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    if (window.location.hash !== \"\") {\n      const hash = getToken(window.location.hash);\n      localStorage.setItem(\"token\", hash[\"access_token\"]);\n      localStorage.setItem(\"expires_in\", hash[\"expires_in\"]);\n      localStorage.setItem(\"token_type\", hash[\"token_type\"]);\n      setAutorized(true);\n    } else {\n      setAutorized(false);\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"callback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, autorized === true && loading === false ? /*#__PURE__*/React.createElement(Authorize, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 55\n    }\n  }) : autorized !== false ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 103\n    }\n  }) : /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: \"/\",\n      state: {\n        from: window.location.href\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 125\n    }\n  }));\n};\n\nexport default AutorizePage;","map":{"version":3,"sources":["C:/Users/aluno/Codenation/react-17/src/Pages/Autorize/index.js"],"names":["React","useState","useEffect","Authorize","Loading","Redirect","getToken","AutorizePage","autorized","setAutorized","loading","setLoading","window","location","hash","localStorage","setItem","pathname","state","from","href"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AAEA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,QAAT,QAAyB,sBAAzB;;AAGA,MAAMC,YAAY,GAAG,MAAM;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGU,MAAM,CAACC,QAAP,CAAgBC,IAAhB,KAAyB,EAA5B,EAA+B;AAC3B,YAAMA,IAAI,GAAGR,QAAQ,CAACM,MAAM,CAACC,QAAP,CAAgBC,IAAjB,CAArB;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BF,IAAI,CAAC,cAAD,CAAjC;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAkCF,IAAI,CAAC,YAAD,CAAtC;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAkCF,IAAI,CAAC,YAAD,CAAtC;AACAL,MAAAA,YAAY,CAAC,IAAD,CAAZ;AAEH,KAPD,MAOK;AACDA,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,GAXQ,EAWN,EAXM,CAAT;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEID,SAAS,KAAK,IAAd,IAAsBE,OAAO,KAAK,KAAlC,gBAA0C,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA1C,GAAoEF,SAAS,KAAK,KAAd,gBAAsB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtB,gBAA4C,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AAAES,MAAAA,QAAQ,EAAC,GAAX;AAAgBC,MAAAA,KAAK,EAAC;AAACC,QAAAA,IAAI,EAACP,MAAM,CAACC,QAAP,CAAgBO;AAAtB;AAAtB,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFpH,CADJ;AAOH,CAxBD;;AA0BA,eAAeb,YAAf","sourcesContent":["import React, {useState,useEffect} from 'react'\r\n\r\nimport {Authorize} from \"../../containers\"\r\nimport { Loading } from '../../components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { getToken } from \"../../tools/splitUrl\"\r\n\r\n\r\nconst AutorizePage = () => {\r\n    const [autorized, setAutorized] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if(window.location.hash !== \"\"){\r\n            const hash = getToken(window.location.hash);\r\n            localStorage.setItem(\"token\",hash[\"access_token\"]);\r\n            localStorage.setItem(\"expires_in\",hash[\"expires_in\"]);\r\n            localStorage.setItem(\"token_type\",hash[\"token_type\"]);\r\n            setAutorized(true);\r\n\r\n        }else{\r\n            setAutorized(false);\r\n        }\r\n    }, [])\r\n    \r\n    return (\r\n        <div className=\"callback\">\r\n            {\r\n            autorized === true && loading === false ? <Authorize></Authorize> : autorized !== false ? <Loading></Loading> : <Redirect to={{ pathname:\"/\", state:{from:window.location.href}}}></Redirect>\r\n            }    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AutorizePage\r\n"]},"metadata":{},"sourceType":"module"}