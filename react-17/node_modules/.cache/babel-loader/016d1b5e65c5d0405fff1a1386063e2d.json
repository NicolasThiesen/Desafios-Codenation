{"ast":null,"code":"import { createStore } from \"redux\";\nconst INITIAL_STATE = {\n  app: {\n    environment: \"production\",\n    name: \"react-spotify\",\n    version: \"0.1.0\"\n  },\n  auth: {\n    accessToken: \"\",\n    errorMessage: \"\",\n    expirationTime: \"\",\n    expiresIn: \"\",\n    isLogged: null,\n    tokenType: \"\"\n  },\n  content: {\n    categories: [],\n    playlists: [],\n    tracks: [],\n    playingNowId: null,\n    playingNowTrack: null,\n    playerHeigh: 0,\n    status: \"idle\",\n    errorMessage: \"\"\n  },\n  user: {\n    email: \"\",\n    errorMessage: \"\",\n    name: \"\",\n    status: null,\n    thumb: \"\"\n  },\n  page: {\n    currentPage: \"\"\n  }\n};\n\nfunction reducer(state = INITIAL_STATE, action) {\n  const {\n    payload\n  } = action;\n\n  switch (action.type) {\n    case \"SET_USER\":\n      return { ...state,\n        user: { ...state.user,\n          email: payload.email,\n          name: payload.name,\n          status: \"success\",\n          thumb: payload.thumb\n        }\n      };\n\n    case \"SET_AUTH\":\n      return { ...state,\n        auth: { ...state.auth,\n          accessToken: payload.access_token,\n          expiresIn: payload.expires_in,\n          tokenType: payload.token_type,\n          isLogged: payload.isLogged\n        }\n      };\n\n    case \"CHANGE_STATUS\":\n      return { ...state,\n        content: { ...state.content,\n          status: payload\n        }\n      };\n\n    case \"USER__LOGOUT\":\n      return INITIAL_STATE;\n\n    case \"LOGIN__ERROR\":\n      return { ...state,\n        user: { ...state.user,\n          errorMessage: payload\n        }\n      };\n\n    case \"GET_CATEGORIES_SUCCESS\":\n      return { ...state,\n        content: { ...state.content,\n          categories: payload,\n          status: \"success\",\n          errorMessage: \"\"\n        }\n      };\n\n    case \"GET_PLAYLISTS_SUCCESS\":\n      return { ...state,\n        content: { ...state.content,\n          playlists: payload.items,\n          status: \"success\",\n          errorMessage: \"\"\n        }\n      };\n\n    case \"GET_TRACKS_SUCCESS\":\n      return { ...state,\n        content: { ...state.content,\n          tracks: payload,\n          status: \"success\",\n          errorMessage: \"\"\n        }\n      };\n\n    case \"GET_CATEGORIE_ERROR\":\n      return { ...state,\n        content: { ...state.content,\n          status: \"error\",\n          errorMessage: payload\n        }\n      };\n\n    case \"REMOVE_TRACK_PLAYER\":\n      return { ...state,\n        content: { ...state.content,\n          playingNowId: null,\n          playingNowTrack: null,\n          playerHeight: 0\n        }\n      };\n\n    case \"ADD_TRACK_PLAYER\":\n      return { ...state,\n        content: { ...state.content,\n          playingNowId: payload.id,\n          playingNowTrack: payload\n        }\n      };\n\n    case \"SET_PLAYER_HEIGHT\":\n      return { ...state,\n        content: { ...state.content,\n          playerHeigh: payload\n        }\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst store = createStore(reducer);\nexport default store;","map":{"version":3,"sources":["C:/Users/aluno/Codenation/react-17/src/store/index.js"],"names":["createStore","INITIAL_STATE","app","environment","name","version","auth","accessToken","errorMessage","expirationTime","expiresIn","isLogged","tokenType","content","categories","playlists","tracks","playingNowId","playingNowTrack","playerHeigh","status","user","email","thumb","page","currentPage","reducer","state","action","payload","type","access_token","expires_in","token_type","items","playerHeight","id","store"],"mappings":"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","sourcesContent":["import {createStore} from \"redux\";\r\n\r\nconst INITIAL_STATE = {\r\n    app : {\r\n        environment: \"production\",\r\n        name: \"react-spotify\",\r\n        version: \"0.1.0\"\r\n    },\r\n    auth: {\r\n       accessToken: \"\", \r\n       errorMessage: \"\",\r\n       expirationTime: \"\",\r\n       expiresIn: \"\",\r\n       isLogged: null,\r\n       tokenType: \"\"\r\n    },\r\n    content: {\r\n        categories: [],\r\n        playlists: [],\r\n        tracks: [],\r\n        playingNowId: null,\r\n        playingNowTrack: null,\r\n        playerHeigh: 0,\r\n        status: \"idle\",\r\n        errorMessage:\"\"\r\n    },\r\n    user: {\r\n        email: \"\",\r\n        errorMessage:\"\",\r\n        name: \"\",\r\n        status: null,\r\n        thumb: \"\",\r\n    },\r\n    page: {\r\n        currentPage: \"\"\r\n    }\r\n};\r\n\r\n\r\nfunction reducer(state= INITIAL_STATE, action){\r\n    const {payload} = action;\r\n    switch (action.type) {\r\n        case \"SET_USER\":\r\n            return  {...state, user: {...state.user, email: payload.email, name: payload.name, status: \"success\", thumb: payload.thumb} }\r\n        case \"SET_AUTH\":\r\n            return  {...state, auth: {...state.auth, accessToken: payload.access_token, expiresIn: payload.expires_in, tokenType: payload.token_type, isLogged:payload.isLogged} }  \r\n        case \"CHANGE_STATUS\":\r\n            return {...state, content: {...state.content , status: payload} }\r\n        case \"USER__LOGOUT\":\r\n            return INITIAL_STATE;\r\n        case \"LOGIN__ERROR\":\r\n            return {...state, user: {...state.user, errorMessage: payload}}\r\n        case \"GET_CATEGORIES_SUCCESS\":\r\n            return {...state, content: {...state.content, categories: payload, status: \"success\", errorMessage: \"\" }}\r\n        case \"GET_PLAYLISTS_SUCCESS\":\r\n            return {...state, content: {...state.content, playlists: payload.items, status: \"success\", errorMessage: \"\" }}\r\n        case \"GET_TRACKS_SUCCESS\":\r\n                return {...state, content: {...state.content, tracks: payload ,status: \"success\", errorMessage: \"\" }}\r\n        case \"GET_CATEGORIE_ERROR\":\r\n            return {...state, content: {...state.content, status: \"error\", errorMessage: payload }}\r\n        case \"REMOVE_TRACK_PLAYER\":\r\n            return {...state, content: {...state.content, playingNowId: null,playingNowTrack: null, playerHeight: 0, }}\r\n        case \"ADD_TRACK_PLAYER\":\r\n            return {...state, content: {...state.content, playingNowId: payload.id, playingNowTrack: payload, }}\r\n        case \"SET_PLAYER_HEIGHT\":\r\n            return {...state, content: {...state.content, playerHeigh: payload }}\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nconst store = createStore(reducer);\r\nexport default store;"]},"metadata":{},"sourceType":"module"}