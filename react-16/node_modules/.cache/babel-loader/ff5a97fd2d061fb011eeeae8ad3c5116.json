{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport UserProfile from '../../containers/UserProfile';\nimport UserPosts from '../../containers/UserPosts';\nimport Loading from '../../components/Loading';\nimport api from \"../../services/api\";\n\nconst ProfileRoute = props => {\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    api.get(`/users?search=${props.match.params.username}`).then(res => {\n      setUser(res[\"data\"]);\n      console.log(res[\"data\"]);\n      api.get(`/users/${res[\"data\"][\"id\"]}/posts`);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n};\n\nexport default ProfileRoute;","map":{"version":3,"sources":["C:/Users/aluno/Codenation/react-16/src/routes/ProfileRoute/ProfileRoute.jsx"],"names":["React","useState","useEffect","UserProfile","UserPosts","Loading","api","ProfileRoute","props","user","setUser","get","match","params","username","then","res","console","log"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AAEA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,OAAOC,GAAP,MAAgB,oBAAhB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,IAAD,CAAhC;AACAC,EAAAA,SAAS,CAAC,MAAK;AACbI,IAAAA,GAAG,CAACK,GAAJ,CAAS,iBAAgBH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBC,QAAS,EAArD,EACGC,IADH,CACSC,GAAD,IAAO;AACXN,MAAAA,OAAO,CAACM,GAAG,CAAC,MAAD,CAAJ,CAAP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAAC,MAAD,CAAf;AACAV,MAAAA,GAAG,CAACK,GAAJ,CAAS,UAASK,GAAG,CAAC,MAAD,CAAH,CAAY,IAAZ,CAAkB,QAApC;AACD,KALH;AAMD,GAPQ,EAOP,EAPO,CAAT;AAQA,sBACE,yCADF;AAKD,CAfD;;AAiBA,eAAeT,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport UserProfile from '../../containers/UserProfile';\nimport UserPosts from '../../containers/UserPosts';\n\nimport Loading from '../../components/Loading';\n\nimport api from \"../../services/api\";\n\nconst ProfileRoute = (props) => {\n  const [user, setUser] = useState(null);\n  useEffect(() =>{\n    api.get(`/users?search=${props.match.params.username}`)\n      .then((res)=>{\n        setUser(res[\"data\"]);\n        console.log(res[\"data\"])\n        api.get(`/users/${res[\"data\"][\"id\"]}/posts`)\n      });\n  },[])\n  return (\n    <>\n      \n    </>\n  );\n};\n\nexport default ProfileRoute;\n"]},"metadata":{},"sourceType":"module"}