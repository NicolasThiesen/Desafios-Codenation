{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aluno\\\\Codenation\\\\react-16\\\\src\\\\containers\\\\UserForm\\\\UserForm.jsx\";\nimport React, { useState } from 'react';\nimport SuccessMessage from '../../components/SuccessMessage';\nimport './UserForm.scss';\n\nconst UserForm = () => {\n  const [name, setName] = useState(\"\");\n  const [username, setUserName] = useState(\"\");\n  const [urlPic, setUrlPic] = useState(\"\");\n  const [avatar, setAvatar] = useState(\"https://viniciusvinna.netlify.app/assets/api-instagram/profiles/profile-placeholder.png\");\n  const [local, setLocal] = useState(null);\n  const [succes, setSucces] = useState(null);\n  const [error, setError] = useState(null);\n\n  const handleSubmit = () => {\n    if (name !== \"\" && username !== \"\" && avatar !== \"https://viniciusvinna.netlify.app/assets/api-instagram/profiles/profile-placeholder.png\") {\n      setSucces(true);\n    } else {\n      console.log(\"preencha todos os dados!\");\n    }\n  };\n\n  const handlerPicture = e => {\n    if (local) {\n      const reader = new FileReader();\n      const file = e.target.files[0];\n\n      reader.onloadend = () => {\n        setAvatar(reader.result);\n      };\n\n      reader.readAsDataURL(file);\n    } else {\n      try {\n        setAvatar(e.target.value);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n\n  const handleFotoType = value => {\n    if (value === \"git\") {\n      setLocal(false);\n    } else {\n      setLocal(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"profile container\",\n    \"data-testid\": \"user-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user__thumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: avatar,\n    alt: \"\",\n    srcset: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user__name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, name, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \"@\", username))))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"post__form container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__form_wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Nome:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: name,\n    placeholder: \"Digite seu nome\",\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"Username:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: username,\n    placeholder: \"Digite o username\",\n    onChange: e => setUserName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"git\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Foto github:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"git\",\n    name: \"local\",\n    defaultChecked: \"true\",\n    onChange: () => handleFotoType(\"git\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"local\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Foto Local:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"local\",\n    name: \"local\",\n    onChange: () => handleFotoType(\"local\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Foto:\"), local ? /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: e => handlerPicture(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 20\n    }\n  }) : /*#__PURE__*/React.createElement(\"input\", {\n    value: urlPic,\n    onChange: e => setUrlPic(e.target.value),\n    type: \"url\",\n    onChange: e => {\n      handlerPicture(e);\n      setUrlPic(e.target.value);\n    },\n    placeholder: \"Digite a url da sua foto do github\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 80\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleSubmit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Cadastrar\"), succes && /*#__PURE__*/React.createElement(SuccessMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 22\n    }\n  }), error && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 27\n    }\n  }, \"Por Favor preencha todos os dados cadastrais!\"), \" \"))));\n};\n\nexport default UserForm;","map":{"version":3,"sources":["C:/Users/aluno/Codenation/react-16/src/containers/UserForm/UserForm.jsx"],"names":["React","useState","SuccessMessage","UserForm","name","setName","username","setUserName","urlPic","setUrlPic","avatar","setAvatar","local","setLocal","succes","setSucces","error","setError","handleSubmit","console","log","handlerPicture","e","reader","FileReader","file","target","files","onloadend","result","readAsDataURL","value","handleFotoType"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport SuccessMessage from '../../components/SuccessMessage';\n\nimport './UserForm.scss';\n\nconst UserForm = () => {\n  const [name,setName] = useState(\"\");\n  const [username,setUserName] = useState(\"\");\n  const [urlPic, setUrlPic] = useState(\"\")\n  const [avatar, setAvatar] = useState(\"https://viniciusvinna.netlify.app/assets/api-instagram/profiles/profile-placeholder.png\");\n  const [local, setLocal] = useState(null);\n  const [succes,setSucces] = useState(null);\n  const [error,setError] = useState(null);\n\n   \n  const handleSubmit = () => { \n    if(name!==\"\" && username!==\"\" && avatar!==\"https://viniciusvinna.netlify.app/assets/api-instagram/profiles/profile-placeholder.png\"){\n      setSucces(true);\n    }else{\n      console.log(\"preencha todos os dados!\")\n    }\n  }\n\n  const handlerPicture = (e) =>{\n\n    if(local){\n      const reader = new FileReader();\n      const file = e.target.files[0];\n\n      reader.onloadend = () => {\n        setAvatar(reader.result)\n      }\n      reader.readAsDataURL(file)\n    }else{\n      try{\n        setAvatar(e.target.value);\n      }catch(e){\n        console.log(e)\n      }\n      \n    }\n  }\n\n  const handleFotoType = (value) =>{\n    if(value===\"git\"){\n      setLocal(false);\n    }else{\n      setLocal(true);\n    }\n  } \n  return (\n    <React.Fragment>\n      <section className=\"profile container\" data-testid=\"user-form\">\n        <div className=\"profile-data\">\n          <div className=\"user\">\n            <div className=\"user__thumb\">\n              <img src={avatar} alt=\"\" srcset=\"\"/>\n            </div>\n            <div className=\"user__name\">\n              {name}\n              <span>@{username}</span>\n            </div>\n          </div>\n        </div>\n      </section>\n      <section className=\"post__form container\">\n        <div className=\"post__form_wrapper\">\n          <label>Nome:</label>\n          <input type=\"text\" value={name} placeholder=\"Digite seu nome\" onChange={(e) => setName(e.target.value)} />\n          <label>Username:</label>\n          <input type=\"text\" value={username} placeholder=\"Digite o username\" onChange={(e) => setUserName(e.target.value)} />\n          <label htmlFor=\"git\">Foto github:</label>\n          <input type=\"radio\" id=\"git\" name=\"local\" defaultChecked=\"true\" onChange={() =>handleFotoType(\"git\")} />\n          <label htmlFor=\"local\">Foto Local:</label>\n          <input type=\"radio\" id=\"local\" name=\"local\" onChange={() => handleFotoType(\"local\")}  />\n          <label>Foto:</label>\n          {local ? <input type=\"file\" onChange={(e) => handlerPicture(e)} /> : <input value={urlPic} onChange={(e) => setUrlPic(e.target.value)} type=\"url\" onChange={(e) => { handlerPicture(e); setUrlPic(e.target.value)} } placeholder=\"Digite a url da sua foto do github\" />}\n          <button type=\"button\" onClick={() => handleSubmit()}>Cadastrar</button>\n          {succes && <SuccessMessage></SuccessMessage>}\n          {error && <div> <span>Por Favor preencha todos os dados cadastrais!</span> </ div> }\n        </div>\n      </section>\n    </React.Fragment>\n  );\n};\n\nexport default UserForm;\n"]},"metadata":{},"sourceType":"module"}