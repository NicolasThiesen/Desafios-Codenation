{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aluno\\\\Codenation\\\\react-16\\\\src\\\\routes\\\\FeedRoute\\\\FeedRoute.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Stories from '../../containers/Stories';\nimport Loading from '../../components/Loading';\nimport Posts from '../../containers/Posts';\nimport './FeedRoute.scss';\nimport api from \"../../services/api\";\n\nconst FeedRoute = () => {\n  const [users, setUsers] = useState([]);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    api.get(\"/users\").then(res => {\n      setUsers(res[\"data\"]);\n      res[\"data\"].map(user => {\n        api.get(`/users/${user.id}/posts`).then(posts => {\n          setPosts(posts.append(posts));\n          console.log(posts);\n        });\n      });\n    });\n  }, []);\n\n  const getUserByPostID = userPost => users.find(user => user.id === userPost);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": \"feed-route\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Stories, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), posts.length !== users.length && users.length !== 0 ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 62\n    }\n  }) : /*#__PURE__*/React.createElement(Posts, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 84\n    }\n  }));\n};\n\nexport default FeedRoute;","map":{"version":3,"sources":["C:/Users/aluno/Codenation/react-16/src/routes/FeedRoute/FeedRoute.jsx"],"names":["React","useState","useEffect","Stories","Loading","Posts","api","FeedRoute","users","setUsers","posts","setPosts","get","then","res","map","user","id","append","console","log","getUserByPostID","userPost","find","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,OAAOC,KAAP,MAAkB,wBAAlB;AAEA,OAAO,kBAAP;AAEA,OAAOC,GAAP,MAAgB,oBAAhB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,GAAG,CAACM,GAAJ,CAAQ,QAAR,EACGC,IADH,CACSC,GAAD,IAAS;AACbL,MAAAA,QAAQ,CAACK,GAAG,CAAC,MAAD,CAAJ,CAAR;AACAA,MAAAA,GAAG,CAAC,MAAD,CAAH,CAAYC,GAAZ,CAAiBC,IAAD,IAAQ;AACtBV,QAAAA,GAAG,CAACM,GAAJ,CAAS,UAASI,IAAI,CAACC,EAAG,QAA1B,EACGJ,IADH,CACSH,KAAD,IAAS;AACbC,UAAAA,QAAQ,CAACD,KAAK,CAACQ,MAAN,CAAaR,KAAb,CAAD,CAAR;AACAS,UAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACD,SAJH;AAKD,OAND;AAOD,KAVH;AAWD,GAZQ,EAYP,EAZO,CAAT;;AAaA,QAAMW,eAAe,GAAIC,QAAD,IAAcd,KAAK,CAACe,IAAN,CAAYP,IAAD,IAASA,IAAI,CAACC,EAAL,KAAYK,QAAhC,CAAtC;;AACA,sBACE;AAAK,mBAAY,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEIZ,KAAK,CAACc,MAAN,KAAiBhB,KAAK,CAACgB,MAAvB,IAAiChB,KAAK,CAACgB,MAAN,KAAgB,CAAjD,gBAAqD,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArD,gBAA2E,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF/E,CADF;AAMD,CAvBD;;AAyBA,eAAejB,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Stories from '../../containers/Stories';\nimport Loading from '../../components/Loading';\n\nimport Posts from '../../containers/Posts';\n\nimport './FeedRoute.scss';\n\nimport api from \"../../services/api\";\n\nconst FeedRoute = () => {\n  const [users, setUsers] = useState([]);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    api.get(\"/users\")\n      .then((res) => {\n        setUsers(res[\"data\"]);\n        res[\"data\"].map((user)=>{\n          api.get(`/users/${user.id}/posts`)\n            .then((posts)=>{\n              setPosts(posts.append(posts))\n              console.log(posts);\n            });\n        })\n      });\n  },[]);\n  const getUserByPostID = (userPost) => users.find((user)=> user.id === userPost);\n  return (\n    <div data-testid=\"feed-route\">\n      <Stories></Stories>\n      { posts.length !== users.length && users.length !==0 ? <Loading></Loading> : <Posts></Posts>}\n    </div>\n  );\n};\n\nexport default FeedRoute;\n"]},"metadata":{},"sourceType":"module"}