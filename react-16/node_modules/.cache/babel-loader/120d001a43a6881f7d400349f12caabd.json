{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aluno\\\\Codenation\\\\react-16\\\\src\\\\routes\\\\ProfileRoute\\\\ProfileRoute.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport UserProfile from '../../containers/UserProfile';\nimport UserPosts from '../../containers/UserPosts';\nimport Loading from '../../components/Loading';\nimport api from \"../../services/api\";\n\nconst ProfileRoute = props => {\n  const [user, setUser] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [avatar, setAvatar] = useState(\"\");\n  useEffect(() => {\n    api.get(`/users?search=${props.match.params.username}`).then(res => {\n      setUser(res[\"data\"][0]);\n      setUsername(res[\"data\"][0][\"name\"]);\n      setAvatar(res[\"data\"][0][\"avatar\"]);\n      setName(res[\"data\"][0][\"name\"]);\n      console.log(res[\"data\"][0][\"name\"]);\n      api.get(`/users/${res[\"data\"][0][\"id\"]}/posts`).then(resPost => {\n        setPosts(resPost[\"data\"]);\n      });\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": \"profile-route\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, user && /*#__PURE__*/React.createElement(UserProfile, {\n    avatar: avatar,\n    name: name,\n    username: username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }), user ? /*#__PURE__*/React.createElement(UserPosts, {\n    posts: posts,\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 57\n    }\n  }));\n};\n\nexport default ProfileRoute;","map":{"version":3,"sources":["C:/Users/aluno/Codenation/react-16/src/routes/ProfileRoute/ProfileRoute.jsx"],"names":["React","useState","useEffect","UserProfile","UserPosts","Loading","api","ProfileRoute","props","user","setUser","posts","setPosts","username","setUsername","name","setName","avatar","setAvatar","get","match","params","then","res","console","log","resPost"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AAEA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,OAAOC,GAAP,MAAgB,oBAAhB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACgB,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACbI,IAAAA,GAAG,CAACa,GAAJ,CAAS,iBAAgBX,KAAK,CAACY,KAAN,CAAYC,MAAZ,CAAmBR,QAAS,EAArD,EACGS,IADH,CACSC,GAAD,IAAO;AACXb,MAAAA,OAAO,CAACa,GAAG,CAAC,MAAD,CAAH,CAAY,CAAZ,CAAD,CAAP;AACAT,MAAAA,WAAW,CAACS,GAAG,CAAC,MAAD,CAAH,CAAY,CAAZ,EAAe,MAAf,CAAD,CAAX;AACAL,MAAAA,SAAS,CAACK,GAAG,CAAC,MAAD,CAAH,CAAY,CAAZ,EAAe,QAAf,CAAD,CAAT;AACAP,MAAAA,OAAO,CAACO,GAAG,CAAC,MAAD,CAAH,CAAY,CAAZ,EAAe,MAAf,CAAD,CAAP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAAC,MAAD,CAAH,CAAY,CAAZ,EAAe,MAAf,CAAZ;AACAjB,MAAAA,GAAG,CAACa,GAAJ,CAAS,UAASI,GAAG,CAAC,MAAD,CAAH,CAAY,CAAZ,EAAe,IAAf,CAAqB,QAAvC,EACGD,IADH,CACSI,OAAD,IAAW;AACfd,QAAAA,QAAQ,CAACc,OAAO,CAAC,MAAD,CAAR,CAAR;AACD,OAHH;AAID,KAXH;AAYD,GAbQ,EAaP,EAbO,CAAT;AAcA,sBACE;AAAK,mBAAY,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,IAAI,iBAAK,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEQ,MAArB;AAA6B,IAAA,IAAI,EAAEF,IAAnC;AAAyC,IAAA,QAAQ,EAAEF,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADZ,EAEGJ,IAAI,gBAAG,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEE,KAAlB;AAAyB,IAAA,IAAI,EAAEF,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAA6C,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFpD,CADF;AAMD,CA3BD;;AA6BA,eAAeF,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport UserProfile from '../../containers/UserProfile';\nimport UserPosts from '../../containers/UserPosts';\n\nimport Loading from '../../components/Loading';\n\nimport api from \"../../services/api\";\n\nconst ProfileRoute = (props) => {\n  const [user, setUser] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [name, setName] = useState(\"\"); \n  const [avatar, setAvatar] = useState(\"\"); \n  \n  useEffect(() =>{\n    api.get(`/users?search=${props.match.params.username}`)\n      .then((res)=>{\n        setUser(res[\"data\"][0]);\n        setUsername(res[\"data\"][0][\"name\"]);\n        setAvatar(res[\"data\"][0][\"avatar\"]);\n        setName(res[\"data\"][0][\"name\"]);\n        console.log(res[\"data\"][0][\"name\"])\n        api.get(`/users/${res[\"data\"][0][\"id\"]}/posts`)\n          .then((resPost)=>{\n            setPosts(resPost[\"data\"]);\n          })\n      });\n  },[])\n  return (\n    <div data-testid=\"profile-route\">\n      {user &&  <UserProfile avatar={avatar} name={name} username={username} ></UserProfile>}\n      {user ? <UserPosts posts={posts} user={user} /> : <Loading/> }\n    </div>\n  );\n};\n\nexport default ProfileRoute;\n"]},"metadata":{},"sourceType":"module"}